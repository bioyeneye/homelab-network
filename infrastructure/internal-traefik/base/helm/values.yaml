# File: traefik/base/helm/values.yaml
# Internal Traefik with MetalLB, Prometheus, Secure Dashboard

deployment:
  enabled: true
  kind: Deployment
  replicas: 2  # High availability

image:
  name: traefik
  tag: "v3.0.4"
  pullPolicy: IfNotPresent

ports:
  web:
    port: 80
    expose: true
    exposedPort: 80
    protocol: TCP
  traefik:
    port: 9000
    expose: false  # Internal only

entryPoints:
  web:
    address: ":80"

providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: true

service:
  enabled: true
  type: LoadBalancer
  annotations:
    metallb.universe.tf/loadBalancerIPs: "192.168.1.231"
    metallb.universe.tf/allow-shared-ip: "traefik-svc"
  spec:
    externalTrafficPolicy: Local

additionalArguments:
  - "--api=true"
  - "--api.dashboard=true"
  - "--api.insecure=false"
  - "--log.level=INFO"
  - "--accesslog=true"
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.addEntryPointsLabels=true"
  - "--metrics.prometheus.addServicesLabels=true"
  - "--ping=true"

hostNetwork: false

securityContext:
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532

podSecurityContext:
  fsGroup: 65532
  fsGroupChangePolicy: OnRootMismatch

resources:
  requests:
    cpu: "100m"
    memory: "50Mi"
  limits:
    cpu: "1000m"
    memory: "1Gi"

readinessProbe:
  failureThreshold: 1
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

rbac:
  enabled: true
  namespaced: false

serviceAccount:
  create: true

ingressClass:
  enabled: true
  isDefaultClass: true  # Change to false if using multiple IngressControllers